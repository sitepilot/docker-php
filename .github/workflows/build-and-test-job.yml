on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      tests:
        required: false
        type: string
        default: ''

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: true
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sitepilot/php-${{ inputs.target }}
          flavor: |
            latest=false
            prefix=${{ matrix.php }}-
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,enable={{is_default_branch}},value=${{ matrix.php }}

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          load: true
          target: ${{ inputs.target }}
          tags: ghcr.io/sitepilot/php-${{ inputs.target }}:build
          cache-from: type=gha,scope=php-${{ inputs.target }}-${{ matrix.php }}
          cache-to: type=gha,mode=max,scope=php-${{ inputs.target }}-${{ matrix.php }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}

      - name: Run unit tests
        run: ${{ inputs.tests }}
        if: ${{ inputs.tests != '' }}

      - name: Build and publish image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          target: ${{ inputs.target }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
          cache-from: type=gha,scope=php-${{ inputs.target }}-${{ matrix.php }}
          cache-to: type=gha,mode=max,scope=php-${{ inputs.target }}-${{ matrix.php }}
          provenance: false
          build-args: |
            PHP_VERSION=${{ matrix.php }}
